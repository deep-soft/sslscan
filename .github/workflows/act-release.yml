# 2024-02-03 09:50
# # Set the version string for the program.
# VERSION = "$(shell grep -E -o -m 1 '[0-9]+\.[0-9]+\.[0-9]+(\-[a-z]+[0-9]+)?' Changelog) Windows $(ARCHITECTURE) (Mingw)"
name: act-release

on:
  workflow_dispatch:
#  push

env:
  PROG_NAME:    "sslscan"
  PROG_VERSION: "v2.0.0"
  TAG_NAME:     "sslscan"
  TAG_VERSION:  "v2.0.0"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        job:
          - { cc: clang,     prog_name: 'sslscan'     }
          - { cc: gcc,       prog_name: 'sslscan'     }
          - { cc: mingw-w64, prog_name: 'sslscan.exe' }
    steps:
      - name: checkout
        uses: deep-soft/checkout@v4

      - name: Set the version string for the program
        run: |
          VERSION="$(grep -E -o -m 1 '[0-9]+\.[0-9]+\.[0-9]+(\-[a-z]+[0-9]+)?' Changelog)";
          echo "VERSION=$VERSION";
          echo "PROG_VERSION=$VERSION" >> $GITHUB_ENV;
          echo "TAG_VERSION=$VERSION"  >> $GITHUB_ENV;

      - name: Print version
        run: |
          echo "PROG_NAME    = ${{ env.PROG_NAME }}";
          echo "PROG_VERSION = ${{ env.PROG_VERSION }}";
          echo "TAG_NAME     = ${{ env.TAG_NAME }}";
          echo "TAG_VERSION  = ${{ env.PROG_VERSION }}";

      - name: Create Zip SRC
        continue-on-error: true
        uses: deep-soft/zip-release@v2
        with:
          type: 'zip'
          filename: '${{ env.PROG_NAME }}-${{ env.PROG_VERSION }}-src-x86_64-mingw.zip'
          directory: '.'
          exclusions: '*.map *.pdb'
          recursive_exclusions: '*.map *.pdb'
          path: '*'
          env_variable: 'ZIP_ARCHIVE_SRC'

      - name: Build with clang/gcc
        if: ${{ matrix.job.cc == 'clang' || matrix.job.cc == 'gcc' }}
        continue-on-error: true
        run: |
          make sslscan
          make static
        env:
          CC: ${{ matrix.job.cc }}

      - name: Build with mingw-w64
        continue-on-error: true
        if: ${{ matrix.job.cc == 'mingw-w64' }}
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq mingw-w64
          make -f Makefile.mingw

      - name: Prepare to publish
        run: |
          mkdir out_release/;
          cp ${{ matrix.job.prog_name }} out_release/;
          # if [[ ${{ matrix.job.cc }} == 'mingw-w64' ]]; then
          #   cp sslscan.exe out_release/
          # else
          #   cp sslscan out_release/
          # fi
          cp Changelog out_release/;
          ls -la out_release/;

      - name: Create Zip Archive Release
        uses: deep-soft/zip-release@v2
        with:
          type: 'zip'
          filename: '${{ env.PROG_NAME }}-${{ env.PROG_VERSION }}-x86_64-${{ matrix.job.cc }}.zip'
          directory: 'out_release'
          exclusions: '*.map *.pdb'
          recursive_exclusions: '*.map *.pdb'
          path: '*'
          env_variable: 'ZIP_ARCHIVE_RELEASE'

      - name: Publish
        uses: deep-soft/action-gh-release@v2.1
        with:
          tag_name: ${{ env.TAG_NAME }}-${{ env.TAG_VERSION }}
          files: |
            ${{ env.ZIP_ARCHIVE_RELEASE }}
            ${{ env.ZIP_ARCHIVE_SRC }}
