name: prerelease

#on: push
on:
  workflow_dispatch:

env:
  TAG_NAME: pre-v2.0.15
  sslscan_VERSION: v2.0.15
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cc: [clang, gcc]
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Build source archive
        continue-on-error: true
        run: |
          staging="sslscan-src-${{ env.sslscan_VERSION }}-x86_64-${{ matrix.cc }}"
          touch "$staging.tar.xz"
          tar --exclude=*.tar* -cv . | xz -9 > "$staging.tar.xz"
          echo "ASSET_SRC=$staging.tar.xz" >> $GITHUB_ENV
          echo "source archive name: "
          ls -l "$staging.tar.xz"
          ls -l ${{ env.ASSET_SRC }}

      - name: Build with ${{ matrix.cc }}
        run: |
          make sslscan
          make static
        env:
          CC: ${{ matrix.cc }}

      - name: Build archive release
        run: |
          staging="sslscan-${{ env.sslscan_VERSION }}-x86_64-${{ matrix.cc }}"
          tar --exclude=*.tar* -cv sslscan.exe | xz -9 > "$staging.tar.xz"
          echo "ASSET=$staging.tar.xz" >> $GITHUB_ENV
          echo "release archive name: "
          ls -l "$staging.tar.xz"
          ls -l ${{ env.ASSET_SRC }}

      - name: Publish Release
        uses: deep-soft/action-gh-release@v1
        with:
          prerelease: true
          tag_name: ${{ env.TAG_NAME }}
          files: |
            ${{ env.ASSET }}
            ${{ env.ASSET_SRC }}          

  build_mingw:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Build source archive
        continue-on-error: true
        run: |
          staging="sslscan-src-${{ env.sslscan_VERSION }}-x86_64-mingw"
          touch "$staging.tar.xz"
          tar --exclude=*.tar* -cv . | xz -9 > "$staging.tar.xz"
          echo "ASSET_SRC=$staging.tar.xz" >> $GITHUB_ENV
          echo "source archive name: "
          ls -l "$staging.tar.xz"
          ls -l ${{ env.ASSET_SRC }}

      - name: Install mingw-w64
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq mingw-w64
      - name: build with mingw-w64
        run: |
          make -f Makefile.mingw

      - name: Build archive release
        run: |
          staging="sslscan-${{ env.sslscan_VERSION }}-x86_64-mingw"
          tar --exclude=*.tar* -cv sslscan.exe | xz -9 > "$staging.tar.xz"
          echo "ASSET=$staging.tar.xz" >> $GITHUB_ENV
          echo "release archive name: "
          ls -l "$staging.tar.xz"
          ls -l ${{ env.ASSET_SRC }}

      - name: Publish Release
        uses: deep-soft/action-gh-release@v1
        with:
          prerelease: true
          tag_name: ${{ env.TAG_NAME }}
          files: |
            ${{ env.ASSET }}
            ${{ env.ASSET_SRC }}          
